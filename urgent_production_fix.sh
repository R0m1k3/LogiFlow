#!/bin/bash

# Script de correction urgente pour la production
# Applique la migration DLC imm√©diatement

set -e

echo "üö® CORRECTION URGENTE - Migration DLC Production"
echo "================================================"

# V√©rifier que Docker Compose est disponible
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå docker-compose non trouv√©"
    exit 1
fi

# V√©rifier que le conteneur PostgreSQL est en cours d'ex√©cution
if ! docker-compose ps | grep -q logiflow-db; then
    echo "‚ùå Conteneur logiflow-db non trouv√©"
    echo "Containers disponibles:"
    docker-compose ps
    exit 1
fi

echo "‚úÖ Conteneur PostgreSQL trouv√©"

# Appliquer la migration DLC
echo "üîÑ Application de la migration DLC..."

docker-compose exec -T logiflow-db psql -U logiflow_admin -d logiflow_db << 'EOF'
-- Migration DLC Stock √âpuis√©
ALTER TABLE dlc_products 
ADD COLUMN IF NOT EXISTS stock_epuise boolean DEFAULT false NOT NULL,
ADD COLUMN IF NOT EXISTS stock_epuise_by varchar(255),
ADD COLUMN IF NOT EXISTS stock_epuise_at timestamp;

-- Index pour performance
CREATE INDEX IF NOT EXISTS idx_dlc_products_stock_epuise ON dlc_products(stock_epuise);

-- V√©rification
SELECT 'Migration DLC appliqu√©e avec succ√®s' as status;

-- Afficher les colonnes ajout√©es
SELECT column_name, data_type 
FROM information_schema.columns 
WHERE table_name = 'dlc_products' 
AND column_name LIKE '%stock_epuise%'
ORDER BY column_name;
EOF

if [ $? -eq 0 ]; then
    echo "‚úÖ Migration DLC appliqu√©e avec succ√®s"
else
    echo "‚ùå Erreur lors de la migration"
    exit 1
fi

# Red√©marrer l'application
echo "üîÑ Red√©marrage de l'application..."
docker-compose restart logiflow

if [ $? -eq 0 ]; then
    echo "‚úÖ Application red√©marr√©e"
else
    echo "‚ùå Erreur lors du red√©marrage"
    exit 1
fi

echo ""
echo "üéâ CORRECTION TERMIN√âE"
echo "L'erreur 'column does not exist' devrait maintenant √™tre r√©solue"
echo ""
echo "V√©rifiez dans les logs que l'API /api/dlc-products fonctionne maintenant"