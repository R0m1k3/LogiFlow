#!/bin/bash
# Script de migration automatique pour les mises √† jour Docker
# Cr√©e uniquement les tables manquantes n√©cessaires au fonctionnement

set -e

echo "üîÑ [AUTO-MIGRATE] V√©rification des tables manquantes..."

# V√©rifier si la base de donn√©es est accessible
if ! psql "$DATABASE_URL" -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚ùå [AUTO-MIGRATE] Impossible de se connecter √† la base de donn√©es"
    exit 1
fi

echo "‚úÖ [AUTO-MIGRATE] Connexion √† la base de donn√©es r√©ussie"

# Fonction pour v√©rifier si une table existe
table_exists() {
    local table_name=$1
    psql "$DATABASE_URL" -tAc "SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_schema='public' AND table_name='$table_name');"
}

# Migration prioritaire: Table announcements (syst√®me d'informations)
if [ "$(table_exists 'announcements')" = "f" ]; then
    echo "üîß [AUTO-MIGRATE] Cr√©ation de la table announcements..."
    psql "$DATABASE_URL" << 'EOF'
CREATE TABLE announcements (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  priority VARCHAR(20) NOT NULL DEFAULT 'normal',
  author_id VARCHAR(255) NOT NULL,
  group_id INTEGER,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  CONSTRAINT announcements_priority_check CHECK (priority IN ('normal', 'important', 'urgent')),
  CONSTRAINT announcements_author_id_fkey FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT announcements_group_id_fkey FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_announcements_priority ON announcements(priority);
CREATE INDEX IF NOT EXISTS idx_announcements_created_at ON announcements(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_announcements_author_id ON announcements(author_id);
CREATE INDEX IF NOT EXISTS idx_announcements_group_id ON announcements(group_id);

COMMENT ON TABLE announcements IS 'Syst√®me d informations - annonces administrateur';
EOF
    echo "‚úÖ [AUTO-MIGRATE] Table announcements cr√©√©e avec succ√®s"
else
    echo "‚ÑπÔ∏è [AUTO-MIGRATE] Table announcements existe d√©j√†"
fi

# V√©rification finale
echo "üìä [AUTO-MIGRATE] V√©rification des tables essentielles:"
psql "$DATABASE_URL" -c "
SELECT 
  CASE 
    WHEN EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'announcements') THEN '‚úÖ announcements'
    ELSE '‚ùå announcements manquante'
  END as status_announcements,
  CASE 
    WHEN EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'users') THEN '‚úÖ users'
    ELSE '‚ùå users manquante'
  END as status_users,
  CASE 
    WHEN EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'groups') THEN '‚úÖ groups'
    ELSE '‚ùå groups manquante'
  END as status_groups;
"

echo "‚úÖ [AUTO-MIGRATE] V√©rification termin√©e!"