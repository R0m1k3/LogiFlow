ctions
 
 
 
      
🗓️ [DATE-CALC] Année précédente: 2024-08-17 (Samedi)

GET /api/user 200 in 295ms

GET /api/user 200 in 347ms

GET /api/user 200 in 348ms

GET /api/dlc-products/stats 200 in 328ms

Customer Orders returned: 38 items

📋 Tasks returned: {

  count: 55,

  userId: 'admin_local',

  userRole: 'admin',

  requestedStoreId: undefined,

  groupIds: undefined,

  taskGroups: [

    { id: 91, title: 'refaire podium lot assiettes', groupId: 2 },

    { id: 90, title: 'caisse 1', groupId: 1 },

    { id: 89, title: 'caisse 3', groupId: 1 }

  ]

}

🌤️ [RESPONSE] Weather data prepared: {

  hasCurrentYear: true,

  hasPreviousYear: true,

  location: 'Frouard, France'

}

GET /api/customer-orders 200 in 367ms

GET /api/tasks 200 in 341ms

GET /api/publicities 200 in 357ms

GET /api/weather/current 200 in 384ms

🔗 PRODUCTION: getDeliveries() récupéré 86 livraisons avec relations

Deliveries returned: 86 items

GET /api/deliveries 200 in 462ms

📊 Statistiques calculées: {

  ordersCount: 20,

  deliveriesCount: 42,

  pendingOrdersCount: 8,

  averageDeliveryTime: 0.3611111111111111,

  totalPalettes: 120,

  totalPackages: 36

}

GET /api/stats/monthly 200 in 477ms

GET /api/groups 200 in 57ms

📢 Stockage mémoire des annonces initialisé

GET /api/announcements 200 in 53ms

GET /api/publicities 200 in 44ms

🎯 [SERVER] POST /api/announcements endpoint hit

🎯 [SERVER] Request body: {

  "title": "TEST",

  "content": "TEST",

  "type": "info"

}

🎯 [SERVER] User object: { hasClaims: false, hasId: true, userId: 'admin_local' }

🎯 [SERVER] Extracted userId: admin_local

🎯 [SERVER] User found: { username: 'admin', role: 'admin', id: 'admin_local' }

🎯 [SERVER] User is admin, proceeding with validation

🎯 [SERVER] Error creating announcement: ZodError: [

  {

    "code": "invalid_type",

    "expected": "string",

    "received": "undefined",

    "path": [

      "createdBy"

    ],

    "message": "Required"

  }

]

    at get error [as error] (file:///app/node_modules/zod/v3/types.js:39:31)

    at ZodObject.parse (file:///app/node_modules/zod/v3/types.js:114:22)

    at file:///app/dist/index.js:7601:57

    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {

  issues: [

    {

      code: 'invalid_type',

      expected: 'string',

      received: 'undefined',

      path: [Array],

      message: 'Required'

    }

  ],

  addIssue: [Function (anonymous)],

  addIssues: [Function (anonymous)],

  errors: [

    {

      code: 'invalid_type',

      expected: 'string',

      received: 'undefined',

      path: [Array],

      message: 'Required'

    }

  ]

}

🎯 [SERVER] Validation errors: [

  {

    code: 'invalid_type',

    expected: 'string',

    received: 'undefined',

    path: [ 'createdBy' ],

    message: 'Required'

  }

]

POST /api/announcements 400 in 11ms

HEAD /api/health 200 in 1ms

